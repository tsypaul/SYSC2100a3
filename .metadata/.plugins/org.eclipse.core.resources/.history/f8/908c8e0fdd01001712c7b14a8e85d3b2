package StackReferenceBased;

import java.util.Scanner;

public class Infix2PostfixConverter {
	
	
	
	public static void convertInfixToPostfix(Object[] o){
		Object[] postFix = new Object [o.length];
		StackReferenceBased s = new StackReferenceBased();
		int count = 0;
		for (Object x : o){
			if(x == "("){
				s.push(x);
			}else if(x == ")"){
				Object stackTop = s.peek();
				while(stackTop != "(" && !s.isEmpty()){
					postFix[count] = stackTop;
					count++;
					stackTop = s.pop();
				}
			}else if(x == "+" || x == "-"){
				if(s.isEmpty()){
					s.push(x);
				}else{
					char a = s.peek();
				}
			}else{
				
			}
			count++;
		}
	}
	
	public static void main(String[] arg){
		System.out.println("Please enter a infix: ");
		Scanner S = new Scanner(System.in);
		String infix = S.nextLine();
		S.close();
		Object[] in = new Object [infix.length()];
		for (int i = 0; i < infix.length(); i++){
			in[i] = infix.charAt(i);
		}
		System.out.println("infix: " + infix);
		convertInfixToPostfix(in);
		System.out.println("postfix: " + infix);
		
	}
}
